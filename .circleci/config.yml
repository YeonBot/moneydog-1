version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.11
  aws-ecr: circleci/aws-ecr@6.5.0

workflows:
  jimmy-custom-build:
    jobs:
      - webpack-upload
      - build-and-push-image

jobs:
  webpack-upload:
    docker:
      - image: circleci/node:10 # the primary container, where your job's commands are run
        environment:
          REACT_APP_NODE_API_URL: $REACT_APP_NODE_API_URL
          REACT_APP_IMAGE_URI: $REACT_APP_IMAGE_URI
          DB_SCHEMA: $DB_SCHEMA
          DB_USER: $DB_USER
          DB_PASSWORD: $DB_PASSWORD
          PROD_DB_URL: $PROD_DB_URL
          DEV_DB_URL: $DEV_DB_URL
          TEST_DB_URL: $TEST_DB_URL
          MIGRATE_dbConnectionUri: $MIGRATE_dbConnectionUri
          JWT_SECRET: $JWT_SECRET
          GOOGLE_API_CLIENT_ID: $GOOGLE_API_CLIENT_ID
          GOOGLE_API_CLIENT_SECRET: $GOOGLE_API_CLIENT_SECRET
          GOOGLE_API_REDIRECT_URL: $GOOGLE_API_REDIRECT_URL
          GOOGLE_API_SCOPE: $GOOGLE_API_SCOPE
          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
          AWS_REGION: $AWS_REGION
          AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID
    steps:
      - checkout # check out the code in the project directory
      - run: npm install
      - run: npm run lint
      - run: npm run test
      - run: npm run build
      - aws-s3/sync:
          from: dist
          to: 's3://moneydog-build/build'
          arguments: |
            --acl public-read
          overwrite: true
      - run: echo aws-s3-sync success
      - aws-s3/copy:
          from: dist/
          to: 's3://moneydog-build'
          arguments: '--dryrun'
  build-image:
    docker:
      - image: circleci/node:10
        environment:
          REACT_APP_NODE_API_URL: $REACT_APP_NODE_API_URL
          REACT_APP_IMAGE_URI: $REACT_APP_IMAGE_URI
          DB_SCHEMA: $DB_SCHEMA
          DB_USER: $DB_USER
          DB_PASSWORD: $DB_PASSWORD
          PROD_DB_URL: $PROD_DB_URL
          DEV_DB_URL: $DEV_DB_URL
          TEST_DB_URL: $TEST_DB_URL
          MIGRATE_dbConnectionUri: $MIGRATE_dbConnectionUri
          JWT_SECRET: $JWT_SECRET
          GOOGLE_API_CLIENT_ID: $GOOGLE_API_CLIENT_ID
          GOOGLE_API_CLIENT_SECRET: $GOOGLE_API_CLIENT_SECRET
          GOOGLE_API_REDIRECT_URL: $GOOGLE_API_REDIRECT_URL
          GOOGLE_API_SCOPE: $GOOGLE_API_SCOPE
          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
          AWS_REGION: $AWS_REGION
          AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID
    parameters:
      account-url:
        default: AWS_ECR_ACCOUNT_URL
        type: env_var_name
      dockerfile:
        default: Dockerfile
        type: string
      path:
        default: .
        type: string
      repo:
        default: moneydog
        type: string
      tag:
        default: latest
        type: string
      extra-build-args:
        default: -t test
        type: string
    steps:
      - run:
          command: |
            docker_tag_args=""
            IFS="," read -ra DOCKER_TAGS \<<< "<< parameters.tag >>"
            for tag in "${DOCKER_TAGS[@]}"; do
              docker_tag_args="$docker_tag_args -t $<<parameters.account-url>>/<<parameters.repo>>:$tag"
            done
            docker build \
              <<#parameters.extra-build-args>><<parameters.extra-build-args>><</parameters.extra-build-args>> \
              -f <<parameters.dockerfile>> \
              $docker_tag_args \
              <<parameters.path>>
            name: Build docker image



